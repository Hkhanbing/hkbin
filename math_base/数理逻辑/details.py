# 先来个目录
"""
数理逻辑基础
    简单命题与复合命题
    命题逻辑公式
    等值演算
    
    命题公式的范式
    命题演算系统
    基本概念
    一阶逻辑公式及解释
    一阶逻辑的等值演算与前束范式
    一阶逻辑的推理理论
"""

# 简单命题与复合命题

"""
命题：可以判断真假的陈述句， 不能为疑问句、祈使句、感叹句等

如果命题的真值为真，则称之为真命题
否则称之为假命题

命题常量：是某个具体命题的符号化
命题变量：意味着它可以指代任意具体命题
(一般地， 没有特殊说明， 命题符号p, q等是命题变量

简单命题与复合命题
不能分成更简单的陈述句的命题为简单命题(或叫原子命题), 否则称为复合命题

命题联结词:
    复合命题由简单命题和命题联结词组合而来

需要记忆的联结词有
非 与 或 如果...,那么 当且仅当
¬  ∧  ∨     →         ↔
对应称谓为
否定 合取 析取 蕴含 等价

联结词优先级:
顺序为¬、(∧、∨)、(→、↔)

"""

# 命题逻辑公式
"""
命题逻辑公式可以根据下面递归定义:
    1.命题常量或命题变量是命题逻辑公式，称为命题逻辑公式的原子项
    2.如果A、B是命题逻辑公式，则A和B以及它们加上联结词构成的复合命题或者简单命题都可以称为命题逻辑公式
    3.所有的命题公式都可以根据1和2得到

关于这个有一个定理:
    设R是某个性质, 如果有:
    1.对于所有原子项p, 都满足性质R
    2.如果对于任意的公式A和B都满足性质R, 就有A、B以及他们加上联结词都满足性质R
    那么，所有的公式A就都满足性质R

真值赋值:
    就是给命题赋值 然后获得0或者1 判断命题真假而已
    有个符号 t(A) = 1 -->A为真命题 -->真值赋值函数 相当于给命题条件而已

下面有几个定义:
永真式:命题公式A在任意真值赋值函数下t(A) == 1恒成立 -->称之为永真式
如果都为0 -->称之为矛盾式
如果不是矛盾式 则称之为可满足式

集合与永真式
定义Σ来表示一组命题公式所构成的集合
定义Σ在真值赋值
函数𝑡 : 𝑈 → {0, 1}下的真值𝑡(Σ)为：𝑡(Σ) = 1当且仅当Σ中任意公
式𝐴有𝑡(𝐴) = 1，否则定义𝑡(Σ) = 0。

如果存在某个t -->真值赋值函数
使得𝑡(Σ) = 1 则称Σ为可满足的 这时称t满足Σ


然后还有另外一个定义
如果对于满足任何足Σ的真值赋值函数t都有 t(A) = 1 这个时候称为𝐴是以Σ为前提的永真式
记为Σ |= A

如果Σ 是空集, 则Φ |= 𝐴表示𝐴为永真式

"""

# 等值演算

"""
命题公式的等值:
    如果A |= B 而且B |= A, 则称命题公式A与命题公式B等值, 记为𝐴 ⇔ 𝐵

显然有下面的定理:
𝐴 ⇔ 𝐵当且仅当𝐴 ↔ 𝐵是永真的。

等值演算定理:
设有𝐴 ⇔ 𝐴′和𝐵 ⇔ 𝐵′，则有：
1. (¬𝐴) ⇔ (¬𝐴′)
2. (𝐴 ∧ 𝐵) ⇔ (𝐴′ ∧ 𝐵′)
3. (𝐴 ∨ 𝐵) ⇔ (𝐴′ ∨ 𝐵′)
4. (𝐴 → 𝐵) ⇔ (𝐴′ → 𝐵′)
5. (𝐴 ↔ 𝐵) ⇔ (𝐴′ ↔ 𝐵′)

如果命题公式𝐴中只出现命题变量、命题常量、命题联接符
号¬、∧和∨ 则称为限制性(命题)公式。
下面对限制性公式进行定理：
    对偶公式𝐴𝑜𝑝: --> 将命题逻辑公式中∨ 都换成∧ 同理反过来也一样
    内否式𝐴¬: --> 将命题公式内所有原子项换成它的非命题

有下面定理:
    1. (𝐴𝑜𝑝)𝑜𝑝 ≡ 𝐴，(𝐴¬)¬ ≡ 𝐴
    2. (𝐴 ∨ 𝐵)𝑜𝑝 ≡ 𝐴𝑜𝑝 ∧ 𝐵𝑜𝑝，(𝐴 ∨ 𝐵)¬ ≡ 𝐴¬ ∨ 𝐵¬
    3. (𝐴 ∧ 𝐵)𝑜𝑝 ≡ 𝐴𝑜𝑝 ∨ 𝐵𝑜𝑝，(𝐴 ∧ 𝐵)¬ ≡ 𝐴¬ ∧ 𝐵¬
    4. (𝐴𝑜𝑝)¬ ≡ (𝐴¬)𝑜p

"""

# 范式

"""
定义:
    由有限个简单合取式构成的析取式称为析取范式
    由有限个简单析取式构成的合取式称为合取范式

一个析取范式是矛盾式当且仅当它的每一个简单合取式都是矛盾式
一个合取范式是永真式当且仅当它的每一个简单析取式都是永真式

举个粒子:
    析取范式: A ∨ (B∧D) ∨ C
    合取范式: A ∧ (B∨D) ∧ C

有一个定理: 任意命题公式都存在与之等值的析取范式与合取范式

""" 

# 命题演算系统

"""
命题演算系统P定义:
    包括四个东西:
        符号表、公式、公理模式、规律、证明
    符号表:
        1、命题变元: 小写英文字母并可加下标
        2、联结词: ¬、→
        3、辅助符号: (,)(圆括号)
    公式:
        1、命题变元是公式
        2、若A是公式, 则(¬A)也是公式
        3、若A和B是公式, 则A→B也是公式
        4、所有公式可通过有限次1/2/3得到
    公理模式:
        1、肯定前件律: (A->(B→A)) 肯定前件律的意思是可以通过前者A退出后件(B→A) 这个时候A是肯定的 也就是它是真命题 否命题当然不成立 否命题通过后件推前件, 确定了单一的关系, 犯了后件否定谬误
        2、分配律: (A→(B→C)) -> ((A→B)→(A→C))
        3、逆否定律: (((¬A)→(¬B)) -> (B→A))
    规律:
        由A和(A→B)可得到B
    证明:
        由公式组成的一个序列:𝐴1, 𝐴2, · · · , 𝐴n而且对每个i,下列二选一成立:
        1、Ai是公理
        2、Ai是由上述序列中Ai之前的某两个公式Aj和Ak应用分离规则得到的
        此时𝐴1, 𝐴2, · · · , 𝐴n记为An的一个证明, 而𝐴n称为P的一个内定理, 记为⊢ 𝐴𝑛
    
证明带有一个规则:
    证明规则Tr:
    A、B、C是P的三个公式, 若⊢𝐴 → 𝐵, 且⊢𝐵 → C, 则⊢𝐴 → C
    
    集合与证明:
        设Σ是P的一个公式集, 称P中的公式序列: 𝐴1, 𝐴2, · · · , 𝐴n为前提Σ下推出An的一个证明, 如果对下面的东西三选一成立:
        1、Ai是公理
        2、Ai∈ Σ
        3、Ai是由上述序列中Ai之前的Aj和Ak应用分离规则得到的
    此时记为Σ ⊢ 𝐴𝑛

记录一下理解: 命题演算系统相当于一个公式证明推理的一个大背景 方法等

演绎定理:
    设Σ是𝑃中的公式集，𝐴和𝐵是𝑃中的两个公式，若Σ ∪ {𝐴} ⊢ 𝐵，则Σ ⊢ 𝐴 → 𝐵 -->由理解 显然成立

演绎定理的逆定理:
    设Σ是𝑃中的公式集，𝐴和𝐵是𝑃中的两个公式，若Σ ⊢ 𝐴 → 𝐵，则Σ ∪ {𝐴} ⊢ 𝐵

推论:
    {𝐴1, 𝐴2, · · · , 𝐴𝑛} ⊢ 𝐴当且仅当⊢ (𝐴1 → (𝐴2 → · · · → (𝐴𝑛 → 𝐴)· · ·))。

还有一条定理:
    设Σ是𝑃中的公式集，𝐴1, 𝐴2, · · · , 𝐴𝑛为𝑃中的公式，若有Σ ⊢ 𝐴1, Σ ⊢ 𝐴2, · · · , Σ ⊢ 𝐴𝑛，且𝐴1, 𝐴2, · · · , 𝐴𝑛 ⊢ 𝐴，则Σ ⊢ 𝐴。

##
合取的引用和消除规则:
    1、合取的引用:𝐴, 𝐵 ⊢ 𝐴 ∧ 𝐵 --> 代表着A∨B ⊢ 𝐴 ∧ 𝐵
    2、合取的消除:𝐴 ∧ 𝐵 ⊢ 𝐴, 𝐵(这代表𝐴 ∧ 𝐵 ⊢ 𝐴及𝐴 ∧ 𝐵 ⊢ 𝐵)

定理
    析取的引入和消除规则：
        1. 析取的引入：𝐴 ⊢ 𝐴 ∨ 𝐵, 𝐴 ⊢ 𝐵 ∨ 𝐴
        2. 析取的消除：𝐴 → 𝐵, 𝐶 → 𝐵, 𝐴 ∨ 𝐶 ⊢ 𝐵
定理
    对于𝑃的任意一个公式𝐴，若有⊢ 𝐴，则𝐴是一个永真式。
定理
    不存在𝑃的一个公式𝐴，使得⊢ 𝐴和⊢ (¬𝐴)都成立。
定理
    若𝐴是𝑃的永真式，则有⊢ 𝐴。
"""
